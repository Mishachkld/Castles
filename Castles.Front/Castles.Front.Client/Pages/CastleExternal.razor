@page "/castle/{CastleId:guid}"
@using System.Text.Json
@using global::Castles.Entities
@rendermode InteractiveWebAssembly
@inject HttpClient _httpClient


@_currentCastle?.Name


@code {
    [Parameter] public Guid CastleId { get; set; }
    private Castle _currentCastle; 

    protected override async Task OnParametersSetAsync()
    {
        var response = await _httpClient.GetAsync($"api/castle/{CastleId}");
        if (response.IsSuccessStatusCode)
        {
            var contentString = await response.Content.ReadAsStringAsync();
            _currentCastle = JsonSerializer.Deserialize<Castle>(contentString, new JsonSerializerOptions()
            {
                PropertyNameCaseInsensitive = true
            });
        }
    }

}